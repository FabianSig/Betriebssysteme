Was ist der Unterschied zwischen Polling und interruptgesteuerter Verarbeitung?;Polling: Zyklische Abfragen von Ereignisquellen (z.B. E/A-Geräte), um Kommunikationsbereitschaft festzustellen bzw. um anliegende Ereignisse oder Kommunikationswünsche abzufragen. Nachteil: CPU muss ständig arbeiten (Effizienz beeinträchtigt, Nachfrage umsonst). Vorteil: Leicht zu implementieren. Interrupts: sog. Betriebssystembedingungen oder asynchrone Ereignisse, die Prozessor dazu veranlassen, vordefinierten Code auszuführen, der außerhalb des normalen Programmflusses liegt. Überwachte Ereignisquellen müssen nicht ständig abgefragt werden., sondern melden sich beim Auftreten eines Ereignisses, das behandelt werden muss.
Wozu dient der System Call und wie wird er üblicherweise von einem Betriebssystem wie Windows oder Unix ausgeführt?; Systemcall (auch Software-Interrupt) ist ein synchroner, also vorhersehbarer und reproduzierbar Interrupt. Ist ein Dienstaufruf an das Betriebssystem, bei dessen Ausführung in den Kernelmodus gewechselt wird. Kontrollfluss wird an den Kernel über ein Anwendungsprogramm übergeben.
Was bedeutet Maskierung von Unterbrechungsanforderungen?;- Explizites Ausschalten eines Interrupts für ein bestimmtes Gerät.- Maskierung erfolgt über ein Maskenregister
Wie erkennt die CPU, daß eine Unterbrechungsanforderung ansteht?;- Prüfung im Befehlszyklus, ob ein Interrupt-Request vorliegt nach Ausführung eines Maschinenbefehls.- Bei Anliegen wird ISR oder Verteilungsroutine verzweigt.
Was versteht man unter einer Interrupt-Vektor-Tabelle?;- Tabelle mit Einsprungadressen- Liegt an vordefinierter Stelle im Kernelspeicher
Was ist eine Interrupt-Service-Routine und wann wird sie aufgerufen?;- Programmstück zur Bearbeitung von Interrupts- Jeder Interrupt Typ hat seine eigene ISR- ISR kann mehreren Interrupt Typen zugeordnet werden- Betriebssystem bietet passende ISRs für alle Interrupts
Was bedeuetet Interrupt-Sharing?;- Mehrere Geräte teilen sich eine Interrupt-Nummer.- Betriebssystem ermittelt, welches Gerät den Interrupt ausgelöst hat.
Erläutern Sie die Abwicklung eines Hardware-Interrupts unter Linux!;1) Linux verwaltet eine Tabelle mit Interrupt-Handlern.2) Jeder Interrupt wird einem Handler durch einen Index zugeordnet.3) Bei einem Interrupt erfolgt der Wechsel in den Kernelmodus und die Sicherung der Register.4) Nicht sofort zu erledigende Aufgaben werden notiert und später mit dem Tasklet-Mechanismus abgewickelt.5) Ein Tasklet wird durch eine Datenstruktur (tasklet_struct) erstellt.6) Das Tasklet wird durch die Kernel-Scheduler-Funktion (tasklet_schedule) registriert.7) Der Tasklet-Scheduler verwaltet und führt die Abarbeitung der anstehenden Tasklets durch.
Erläutern Sie die Behandlung eines System Calls!;Erfolgt durch speziellen Maschinenbefehl des Prozessors (Supervisor-Call (SVC)). Abwicklung:1) Sicherung des aktuellen Prozesskontexts.2) Belegung des Program Counter mit der passenden Systemroutine-Adresse.3) Wechsel vom Benutzermodus in den Kernelmodus.4) Durchführung der adressierten Systemroutine (Systemcall).5) Wiederherstellung des alten Prozesskontexts.6) Der Program Counter wird mit der Adresse des Befehls nach dem Systemcall belegt.
Erläutern Sie den Unterschied zwischen einem synchronen und einem asynchronen Interrupt!;1)Synchroner Interrupt:- Tritt bei synchronen Ereignissen auf, die unter identischen Randbedingungen immer an derselben Stelle im Programm auftreten.- Auch als Ausnahmen (Exceptions) bezeichnet.- Von der CPU selbst ausgelöst und für das laufende Programm bestimmt.2) Asynchroner Interrupt:- Klassische Interrupt-Typen, unabhängig von einem laufenden Programm.- Tritt unabhängig davon auf, was das System gerade macht.- Beispiele: Ankunft einer Nachricht an einem Netzwerkadapter, Zustellung eines Plattenspeicherblocks.- Unterbrechen in der Regel für kurze Zeit Ablauf des laufenden Programms.- Nicht vorhersehbar und nicht reproduzierbar.
Welche Aufgabe hat ein Interrupt-Controller?;Umwandlung einer Interruptanforderung (IRQ) in eine CPU-Unterbrechung die mit ISR bearbeitet werden muss.
Was ist in der Prozessverwaltung ein PCB, wozu dient er und welche Inhalte hat er?;- PCB: ein Eintrag in der Prozesstabelle1) Dient zur Identifikation und Verwaltung von Prozessen2) Enthält Informationen zum Prozesszustand3) Beinhaltet Daten zu zugeordneten Ressourcen (Dateien, offene Netzwerkverbindungen)
Nennen Sie dabei drei wichtige Informationen, die im PCB verwaltet werden!;- Programmzähler- Prozesszustand- Priorität- Prozessnummer- aktuellen Registerinhalte
Was versteht man unter einem Thread? Wie verhalten sich Threads zu Prozessen im Hinblick auf die Nutzung des Prozessadressraums?;- Eine nebenläufige Ausführungseinheit innerhalb eines Prozesses.- Threads erhalten den vollen Zugriff auf den zugehörigen Prozessadressraum.
Beschreiben Sie den groben Ablauf eines Prozess-Kontextwechsels!;- Aktiver Prozess wird unterbrochen.- Prozesskontext (gesamte Information des unterbrochenen Prozesses) wird gesichert- Prozesskontext des neu aktivierten Prozesses wird in die Ablaufumgebung geladen
Erläutern Sie, warum ein Thread-Kontextwechsel schneller sein kann als ein Prozess-Kontextwechsels!;Weil meist Speicherbereiche des gleichen Prozesses verwendet werden.
Was bedeutet eine 1:n-Beziehung zwischen Prozess und Thread?;Prozess kann mehrere Threads beherbergen.
Warum ist der Einsatz von Threads sinnvoll?;Threads sind leichtgewichtiger als Prozesse, wodurch Kontextwechsel innerhalb desselben Prozesses schneller sind.
Beschreiben Sie einen einfachen Zustandsautomaten eines Prozesses!;Vier Zustände.- „bereit“: Prozess zur Bearbeitung vorbereitet.- „aktiv“: hat eine CPU- „blockiert“: wartet auf Ressourcen, um weitermachen zu können.- „beendet“: Prozess ist dann schon nicht mehr im System vorhanden. 
Erläutern Sie die Prozesshierarchie unter Unix!;- Baumartige Struktur mit dem init- Prozess als Wurzel (PID 1).- Andere wichtige Prozesse sind swapper (PID 0) und page (PID 2).- Bei der Erzeugung eines Kindprozesses erbt dieser Umgebungseinstellungen, offene Dateien und den Adressraum vom Elternprozess.- Der Kindprozess kann dasselbe Programm ausführen oder ein neues Programm mit dem Systemaufruf execve laden und dadurch das Elternprozess-Programm ersetzen.
Was ist ein Zombie-Prozess unter Unix?;Ein Prozess in einem speziellen Zustand der terminieren will. Er bleibt im Zustand, bis der Elternprozess eine Nachricht über das Ableben des Kindprozesses erhalten hat und terminiert erst dann.
Welche Scheduling-Algorithmen sind für Echtzeitbetriebssysteme sinnvoll? Begründen Sie!;- Minimal Deadline First: Priorisiert Prozesse basierend auf ihrer nächsten Zeitschranke (Deadline), um kritische Aufgaben zu gewährleisten.- Polled Loop: Zyklisches Abfragen von Ereignisquellen zur sofortigen Bearbeitung von Ereignissen.- Interrupt-gesteuerte Systeme: Warten auf Interrupts von Ereignisquellen und Ausführung der entsprechenden Interrupt-Service-Routine (ISR).- Die Auswahl hängt von der Kritikalität der Ereignisse und den akzeptablen Verzögerungen ab. Hard Realtime-Systeme erfordern schnelle Reaktionen, während Soft Realtime-Systeme gewisse Verzögerungen tolerieren können.
Welche Aufgaben haben im Prozess-Management der Dispatcher und der Scheduler?;- Scheduler: Die Komponente im Prozessmanager, die für die Planung der Betriebsmittelzuteilung zuständig ist.- Dispatcher: Die Komponente, die dann einen tatsächlichen Prozesswechsel ausführt.
Nennen Sie jeweils zwei geeignete Scheduling-Verfahren für Batch- und Dialog-Systeme und erläutern Sie diese kurz!;- Batchsysteme:- FCFS (First Come First Served): Verarbeitet Aufträge in der Reihenfolge ihres Eintreffens.- SJF (Shortest Job First): Priorisiert kürzere Aufträge für schnellere Bearbeitung.- Dialogsysteme:- RR (Round Robin): Zyklich Prozessen CPU-Zeit zuweisen.- PS (Priority Scheduling): Prozesse nach Priorität auswählen.
Erläutern Sie den Unterschied zwischen preemptive und non-preemptive Scheduling und nennen Sie jeweils zwei Scheduling-Strategien, die in diese Kategorien passen!;- non-preemptive: darf ein Prozess nicht unterbrechen, bis er seine Aufgaben vollständig erledigt hat. Beispiele: First Come First Served (FCFS), Shortest Job First (SJF).- preemptive Scheduling: darf eine Unterbrechung stattfinden.
Wie funktioniert der RR-Scheduling-Algorithmus?;- Weist jedem Prozess eine Zeitscheibe zu.- Bei Ablauf der Zeitscheibe wird der aktuelle Prozess unterbrochen und in die Warteschlange gestellt.- Der nächste Prozess erhält die CPU.- Dieser Ablauf wiederholt sich zyklisch.- Die Auswahl der Zeitscheibe beeinflusst die Systemleistung.
Warum ist der Scheduling-Algorithmus SRTF (Shortest Remaining Time First) kaum zu realisieren?;SRTF wählt den Prozess mit der kürzesten verbleibenden Zeit aus, was theoretisch optimal für Dialogprozesse ist. Umsetzung jedoch schwierig, da Betriebssysteme oft keine Informationen über die verbleibende Prozesszeit haben.